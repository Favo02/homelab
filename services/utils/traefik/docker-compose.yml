services:

  traefik:
    image: traefik:latest
    container_name: util-traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - './traefik-data/acme.json:/acme.json'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    ports:
      - 80:80
      - 443:443
      # dashboard accessible only through reverse proxy
      # - 55555:8080
    environment:
      TZ: ${TIMEZONE}
      CF_API_EMAIL: ${CF_API_EMAIL}
      CF_DNS_API_TOKEN: ${CF_DNS_API_TOKEN}
    command:
      - --api.dashboard=true
      - --log.level=debug
      # docker provider
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      # letsencrypt dns challenge
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.email=${LE_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/acme.json
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.disablePropagationCheck=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.delayBeforeCheck=60
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1
      # redirect http to https
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      # https configuration
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.certResolver=letsencrypt
      - --entrypoints.websecure.http.tls.domains[0].main=favo02.dev
      - --entrypoints.websecure.http.tls.domains[0].sans=*.favo02.dev
      # plugins
      # TODO: geoblocking, umami, fail2ban, limit ip access to lan
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.util-traefik.rule=Host(`traefik.favo02.dev`)'
      - 'traefik.http.routers.util-traefik.service=api@internal'
      - 'traefik.http.routers.util-traefik.entrypoints=websecure'
      - 'traefik.http.routers.util-traefik.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.util-traefik.middlewares=auth'
      - 'traefik.http.middlewares.auth.basicauth.users=${BASIC_AUTH}'
    # read below
    networks:
      - proxy01 # util-portainer
      - proxy02 # util-gotify
      - proxy03 # util-umami
      - proxy04 # service-firefly
      - proxy05 # service-immich
      - proxy06 # website-favo02dev
      - proxy07 # website-socialnetworkformusic
      - proxy08 # website-superunimia
      - proxy09
      - proxy10
      - proxy11
      - proxy12
      - proxy13
      - proxy14
      - proxy15

# Networks that let the proxy communicate with containers without allowing cross-container communications
# More than used are defined to avoid restarting this container when adding a new proxyied service
networks:
  proxy01:
  proxy02:
  proxy03:
  proxy04:
  proxy05:
  proxy06:
  proxy07:
  proxy08:
  proxy09:
  proxy10:
  proxy11:
  proxy12:
  proxy13:
  proxy14:
  proxy15:
